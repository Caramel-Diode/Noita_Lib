const zh_cn = langData.getZH_CN;
const blank = Symbol("");
/**
 * 获取注释文本
 */
const getCommentText = data => `/*
 * Generated by parseTools.spell
 * ${new Date().toLocaleString()}
 * form "data/scripts/status_effects/status_list.lua"
 * ${data}
 */
//prettier-ignore`;

class Status {
    /** @type {Array<String>} */
    static iconsURLS = [];
    /**
     *
     * @param {StatusData} data
     */
    constructor(data) {
        this.id = data.id;
        this.name = zh_cn(data.name.slice(1));
        this.desc = zh_cn(data.desc.slice(1));
        this.entity = data.entity;
        this.fireProtection = data.fireProtection;
        this.harmful = data.harmful;
        this.removeCells = data.removeCells;
        this.threshold = data.threshold;
        const iconIndex = Status.iconsURLS.indexOf(data.icon);
        if (iconIndex !== -1) this.iconIndex = iconIndex;
        else {
            Status.iconsURLS.push(data.icon);
            this.iconIndex = Status.iconsURLS.length - 1;
        }
    }
    toString(spread = false) {
        /* prettier-ignore */
        const result = JSON5.stringify([
            this.id,
            this.name,
            this.desc,
            this.entity,
            this.iconIndex,
            bitsToNum([
                this.fireProtection,
                this.harmful,
                this.removeCells
            ]),
            this.threshold === 0 ? blank : this.threshold

        ]);
        if (spread) return result.slice(1, -1);
        return result;
    }
}

(async () => {
    await langData.ready;
    const result = statusDatas.map(e => new Status(e));
    const imgs = await Promise.all(Status.iconsURLS.map(e => PNG.removeGAMA(`/${e}`)));
    const canvas = await createSprite(imgs, { size: 12 });
    document.querySelector("#canvas-viewport").append(canvas);

    document.body.append(
        h.button(
            {
                async onclick() {
                    const dataStr = result.map(e => e.toString(true)).join(",\n    ");
                    const fileContent = `${getCommentText(`共${result.length}条状态数据`)}\n[\n    ${dataStr}\n]`;
                    download(fileContent, "status.data.js");
                }
            },
            "生成状态数据"
        )
    );
})();
